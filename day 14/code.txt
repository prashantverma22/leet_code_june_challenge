class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector< vector<pair<int,int> > > adj(n);
        for(vector<int> &f : flights){
            adj[f[0]].push_back({f[1], f[2]});
        }
        priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>> > pq;
        pq.push({0, src, K+1});
        while(!pq.empty())
        {
            vector<int> top = pq.top();
            pq.pop();
            int d = top[0];
            int u = top[1];
            int e = top[2];
            if(dst == u){
                return d;
            }
            else if(e > 0){
                for(pair<int,int> &v : adj[u]){
                    pq.push({ d + v.second, v.first, e-1 });
                }
            }
        }
        return -1;
    }
};